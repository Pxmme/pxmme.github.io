<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[TJCTF - Weird Logo]]></title>
      <url>/2018/08/12/TJCTF-Write-Up-Weird-Logo/</url>
      <content type="text"><![CDATA[ChallengeThis company’s logo stands in contrast of those of other leading edge tech companies with its poor design[5 points]Written by jfrucht25Initial thoughtsHaving a static .png image with this little amount of points rewarded means it won’t be tough.ExploitationLet’s start with the basics. The “file” command tells us it is indeed a .png. The “binwalk” and “strings” commands give us nothing interesting. Next step? Stegsolve!You can install it here.Here is our beautiful logo :And here is what we can find with just a few switches to the right :Flag : tjctf{in_plain_sight}After thoughtsNot much. This is the very basic of steganography. I’ve encountered it dozens of times in past CTFs.]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> tjctf-2018 </tag>
        
          <tag> write-up </tag>
        
          <tag> forensics </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[TJCTF - We Will Rock You]]></title>
      <url>/2018/08/12/TJCTF-Write-Up-We-Will-Rock-You/</url>
      <content type="text"><![CDATA[The challengeHelp! I lost the password to my Dogecoin wallet. I had like 10 Dogecoin in there. If you get the password, you’ll get the flag! Flag format: tjctf{password}[75 points]Written by Alaska47Initial thoughtsSeeing the name of the challenge, I immediately thought about the infamous rockyou.txt list of passwords. For those of you who don’t know it, it’s this huge list of passwords that was created out of real, leaked passwords.It’s natively present in Kali, check /usr/share/wordlists and you’ll find a rockyou.txt.gz :)So I assumed I’d have to bruteforce this wallet in order to retrieve the password. I googled for “wallet bruteforce” and found glv2’s Github magic thingy.ExploitationFirst off, let’s clone this github repo.~# git clone https://github.com/glv2/bruteforce-walletLet’s install the dependencies required :~# apt install libdb-dev libssl-dev -yLet’s then try to install it following the README’s instructions.~# cd bruteforce-wallet &amp;&amp; ./autogen.sh./autogen.sh: 6: ./autogen.sh: autoreconf: not foundOops! Seems I need to install a package first.~# apt-get install autoconf~# ./autogen.shconfigure.ac:6: installing './compile'configure.ac:2: installing './install-sh'configure.ac:2: installing './missing'Makefile.am: installing './depcomp'Then a ./configure, make and make install and we’re good! Now, let’s use our new little tool :3~# bruteforce-wallet -t 6 -f /root/Documents/rockyou.txt 9d7e6203fb6e2c14646c63bea94e48001b9317c86bec229c3e063904a168dfad_wallet.datWarning: using dictionary mode, ignoring options -b, -e, -l, -m and -s. Tried passwords: 59Tried passwords per second: 59,000000Last tried password: samantha Password found: tinkerbellGot it! Password is “tinkerbell”, hereby flag is : tjctf{tinkerbell}After thoughtsA very basic challenge worth a lot of points compared to other ones in this TJCTF. Still, I enjoyed the five minutes it took me, as I never had to bruteforce a coin-wallet before. Valuable experience!]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> tjctf-2018 </tag>
        
          <tag> write-up </tag>
        
          <tag> forensics </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
    <entry>
      <title><![CDATA[TJCTF - Trippy]]></title>
      <url>/2018/08/12/TJCTF-Write-Up-Trippy/</url>
      <content type="text"><![CDATA[ChallengeNo description[5 points]Written by Alaska47Initial thoughtsSo, we have no description and a gif file. All of this for little to no points. This should be quick.Exploitation~# wget https://static.tjctf.org/be37fef78cfd6c7deda71154f567e6d0cfefbda1f80698c064bab469d3a54c58_trippy.gif ~# strings be37fef78cfd6c7deda71154f567e6d0cfefbda1f80698c064bab469d3a54c58_trippy.gif | grep tjctftjctf{w0w}Meh.Flag : tjctf{w0w}After thoughtsNot much.]]></content>
      <categories>
        
      </categories>
      <tags>
        
          <tag> tjctf-2018 </tag>
        
          <tag> write-up </tag>
        
          <tag> misc </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
